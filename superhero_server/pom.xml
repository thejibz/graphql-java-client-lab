<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>microprofile-graphql-client</artifactId>
        <groupId>org.eclipse.microprofile.graphql</groupId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>


    <artifactId>superhero_server</artifactId>
    <packaging>war</packaging>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Java version -->
        <maven.compiler.release>11</maven.compiler.release>

        <spqr.version>1.0-microprofile-proto</spqr.version>
        <graphql.servlet.version>7.5.0</graphql.servlet.version>
    </properties>

    <dependencies>
        <!-- The API -->
        <dependency>
            <groupId>org.eclipse.microprofile.graphql</groupId>
            <artifactId>microprofile-graphql-api</artifactId>
            <version>${microprofile-graphql.version}</version>
        </dependency>
        <!-- What we use from MicroProfile -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- What we use from Java EE -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>4.0.3</version>
            <scope>provided</scope>
        </dependency>

        <!-- The GraphQL Libraries we are wrapping for the implementation -->
        <dependency>
            <groupId>io.leangen.graphql</groupId>
            <artifactId>spqr</artifactId>
            <version>${spqr.version}</version>
        </dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-java-servlet</artifactId>
            <version>${graphql.servlet.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.servlet</groupId>
                    <artifactId>jakarta.servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.websocket</groupId>
                    <artifactId>jakarta.websocket-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Set the java version we want to use -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>

            <!-- This will get the app part of the tck so that we can deploy it, ignoring all the test stuff -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.eclipse.microprofile.graphql</groupId>
                                    <artifactId>microprofile-graphql-tck</artifactId>
                                    <version>${microprofile-graphql.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <excludes>**/tests/,**/dynamic/,**/*Test.class</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>


    <profiles>
        <profile>
            <id>thorntail</id>
            <properties>
                <thorntail.version>2.6.0.Final</thorntail.version>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>io.thorntail</groupId>
                        <artifactId>thorntail-maven-plugin</artifactId>
                        <version>${thorntail.version}</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <fractionDetectMode>when_missing</fractionDetectMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>
        </profile>


        <profile>
            <id>payara-micro</id>

            <properties>
                <payara-micro.maven.version>1.0.5</payara-micro.maven.version>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>fish.payara.maven.plugins</groupId>
                        <artifactId>payara-micro-maven-plugin</artifactId>
                        <version>${payara-micro.maven.version}</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <useUberJar>false</useUberJar>
                                    <daemon>false</daemon>
                                    <deployWar>true</deployWar>
                                    <contextRoot>/</contextRoot>
                                    <deployArtifacts>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>${project.packaging}</type>
                                        </artifactItem>
                                    </deployArtifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>

</project>